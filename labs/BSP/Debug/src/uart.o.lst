   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"uart.c"
  21              	.Ltext0:
  22              		.file 1 "../src/uart.c"
 1934              		.align	2
 1935              		.global	uart0_init
 1937              	uart0_init:
 1938              	.LFB0:
   1:../src/uart.c **** #include <s3c44b0x.h>
   2:../src/uart.c **** #include <uart.h>
   3:../src/uart.c **** #include <ctype.h>
   4:../src/uart.c **** 
   5:../src/uart.c **** void uart0_init( void )
   6:../src/uart.c **** {
 1939              		.loc 1 6 0
 1940              		.cfi_startproc
 1941              		@ Function supports interworking.
 1942              		@ args = 0, pretend = 0, frame = 0
 1943              		@ frame_needed = 1, uses_anonymous_args = 0
 1944 0000 0DC0A0E1 		mov	ip, sp
 1945              	.LCFI0:
 1946              		.cfi_def_cfa_register 12
 1947 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1948 0008 04B04CE2 		sub	fp, ip, #4
 1949              		.cfi_offset 14, -8
 1950              		.cfi_offset 13, -12
 1951              		.cfi_offset 11, -16
 1952              	.LCFI1:
 1953              		.cfi_def_cfa 11, 4
   7:../src/uart.c ****     UFCON0 = 0x1; // XXXX.X001
 1954              		.loc 1 7 0
 1955 000c 40309FE5 		ldr	r3, .L2
 1956 0010 0120A0E3 		mov	r2, #1
 1957 0014 002083E5 		str	r2, [r3, #0]
   8:../src/uart.c ****     UMCON0 = 0X0; // 0000.000X
 1958              		.loc 1 8 0
 1959 0018 38309FE5 		ldr	r3, .L2+4
 1960 001c 0020A0E3 		mov	r2, #0
 1961 0020 002083E5 		str	r2, [r3, #0]
   9:../src/uart.c ****     ULCON0 = 0x3; // 0000.0011
 1962              		.loc 1 9 0
 1963 0024 1D36A0E3 		mov	r3, #30408704
 1964 0028 0320A0E3 		mov	r2, #3
 1965 002c 002083E5 		str	r2, [r3, #0]
  10:../src/uart.c ****     UBRDIV0 = 34; // 64MHz / (115200 * 16) - 1
 1966              		.loc 1 10 0
 1967 0030 24309FE5 		ldr	r3, .L2+8
 1968 0034 2220A0E3 		mov	r2, #34
 1969 0038 002083E5 		str	r2, [r3, #0]
  11:../src/uart.c ****     UCON0 = 0x5;  // XX.0000.0101
 1970              		.loc 1 11 0
 1971 003c 1C309FE5 		ldr	r3, .L2+12
 1972 0040 0520A0E3 		mov	r2, #5
 1973 0044 002083E5 		str	r2, [r3, #0]
  12:../src/uart.c **** }
 1974              		.loc 1 12 0
 1975 0048 0CD04BE2 		sub	sp, fp, #12
 1976 004c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1977 0050 1EFF2FE1 		bx	lr
 1978              	.L3:
 1979              		.align	2
 1980              	.L2:
 1981 0054 0800D001 		.word	30408712
 1982 0058 0C00D001 		.word	30408716
 1983 005c 2800D001 		.word	30408744
 1984 0060 0400D001 		.word	30408708
 1985              		.cfi_endproc
 1986              	.LFE0:
 1988              		.align	2
 1989              		.global	uart0_putchar
 1991              	uart0_putchar:
 1992              	.LFB1:
  13:../src/uart.c **** 
  14:../src/uart.c **** void uart0_putchar( char ch )
  15:../src/uart.c **** {
 1993              		.loc 1 15 0
 1994              		.cfi_startproc
 1995              		@ Function supports interworking.
 1996              		@ args = 0, pretend = 0, frame = 8
 1997              		@ frame_needed = 1, uses_anonymous_args = 0
 1998 0064 0DC0A0E1 		mov	ip, sp
 1999              	.LCFI2:
 2000              		.cfi_def_cfa_register 12
 2001 0068 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2002 006c 04B04CE2 		sub	fp, ip, #4
 2003              		.cfi_offset 14, -8
 2004              		.cfi_offset 13, -12
 2005              		.cfi_offset 11, -16
 2006              	.LCFI3:
 2007              		.cfi_def_cfa 11, 4
 2008 0070 08D04DE2 		sub	sp, sp, #8
 2009 0074 0030A0E1 		mov	r3, r0
 2010 0078 0D304BE5 		strb	r3, [fp, #-13]
  16:../src/uart.c ****     while((UFSTAT0 & ( 1 << 9 )));
 2011              		.loc 1 16 0
 2012 007c 0000A0E1 		mov	r0, r0	@ nop
 2013              	.L5:
 2014              		.loc 1 16 0 is_stmt 0 discriminator 1
 2015 0080 24309FE5 		ldr	r3, .L6
 2016 0084 003093E5 		ldr	r3, [r3, #0]
 2017 0088 023C03E2 		and	r3, r3, #512
 2018 008c 000053E3 		cmp	r3, #0
 2019 0090 FAFFFF1A 		bne	.L5
  17:../src/uart.c ****     UTXH0 = ch;
 2020              		.loc 1 17 0 is_stmt 1
 2021 0094 14309FE5 		ldr	r3, .L6+4
 2022 0098 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 2023 009c 002083E5 		str	r2, [r3, #0]
  18:../src/uart.c **** }        
 2024              		.loc 1 18 0
 2025 00a0 0CD04BE2 		sub	sp, fp, #12
 2026 00a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2027 00a8 1EFF2FE1 		bx	lr
 2028              	.L7:
 2029              		.align	2
 2030              	.L6:
 2031 00ac 1800D001 		.word	30408728
 2032 00b0 2000D001 		.word	30408736
 2033              		.cfi_endproc
 2034              	.LFE1:
 2036              		.align	2
 2037              		.global	uart0_getchar
 2039              	uart0_getchar:
 2040              	.LFB2:
  19:../src/uart.c **** 
  20:../src/uart.c **** char uart0_getchar( void )
  21:../src/uart.c **** {
 2041              		.loc 1 21 0
 2042              		.cfi_startproc
 2043              		@ Function supports interworking.
 2044              		@ args = 0, pretend = 0, frame = 0
 2045              		@ frame_needed = 1, uses_anonymous_args = 0
 2046 00b4 0DC0A0E1 		mov	ip, sp
 2047              	.LCFI4:
 2048              		.cfi_def_cfa_register 12
 2049 00b8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2050 00bc 04B04CE2 		sub	fp, ip, #4
 2051              		.cfi_offset 14, -8
 2052              		.cfi_offset 13, -12
 2053              		.cfi_offset 11, -16
 2054              	.LCFI5:
 2055              		.cfi_def_cfa 11, 4
  22:../src/uart.c ****     while(!(UFSTAT0 & 0xF));
 2056              		.loc 1 22 0
 2057 00c0 0000A0E1 		mov	r0, r0	@ nop
 2058              	.L9:
 2059              		.loc 1 22 0 is_stmt 0 discriminator 1
 2060 00c4 28309FE5 		ldr	r3, .L10
 2061 00c8 003093E5 		ldr	r3, [r3, #0]
 2062 00cc 0F3003E2 		and	r3, r3, #15
 2063 00d0 000053E3 		cmp	r3, #0
 2064 00d4 FAFFFF0A 		beq	.L9
  23:../src/uart.c ****     return URXH0;
 2065              		.loc 1 23 0 is_stmt 1
 2066 00d8 18309FE5 		ldr	r3, .L10+4
 2067 00dc 003093E5 		ldr	r3, [r3, #0]
 2068 00e0 FF3003E2 		and	r3, r3, #255
  24:../src/uart.c **** }
 2069              		.loc 1 24 0
 2070 00e4 0300A0E1 		mov	r0, r3
 2071 00e8 0CD04BE2 		sub	sp, fp, #12
 2072 00ec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2073 00f0 1EFF2FE1 		bx	lr
 2074              	.L11:
 2075              		.align	2
 2076              	.L10:
 2077 00f4 1800D001 		.word	30408728
 2078 00f8 2400D001 		.word	30408740
 2079              		.cfi_endproc
 2080              	.LFE2:
 2082              		.align	2
 2083              		.global	uart0_puts
 2085              	uart0_puts:
 2086              	.LFB3:
  25:../src/uart.c **** 
  26:../src/uart.c **** void uart0_puts( char *s )
  27:../src/uart.c **** {
 2087              		.loc 1 27 0
 2088              		.cfi_startproc
 2089              		@ Function supports interworking.
 2090              		@ args = 0, pretend = 0, frame = 8
 2091              		@ frame_needed = 1, uses_anonymous_args = 0
 2092 00fc 0DC0A0E1 		mov	ip, sp
 2093              	.LCFI6:
 2094              		.cfi_def_cfa_register 12
 2095 0100 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2096 0104 04B04CE2 		sub	fp, ip, #4
 2097              		.cfi_offset 14, -8
 2098              		.cfi_offset 13, -12
 2099              		.cfi_offset 11, -16
 2100              	.LCFI7:
 2101              		.cfi_def_cfa 11, 4
 2102 0108 08D04DE2 		sub	sp, sp, #8
 2103 010c 10000BE5 		str	r0, [fp, #-16]
  28:../src/uart.c ****     while (*s != '\0'){
 2104              		.loc 1 28 0
 2105 0110 060000EA 		b	.L13
 2106              	.L14:
  29:../src/uart.c ****     	uart0_putchar(*s++);
 2107              		.loc 1 29 0
 2108 0114 10301BE5 		ldr	r3, [fp, #-16]
 2109 0118 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2110 011c 10201BE5 		ldr	r2, [fp, #-16]
 2111 0120 012082E2 		add	r2, r2, #1
 2112 0124 10200BE5 		str	r2, [fp, #-16]
 2113 0128 0300A0E1 		mov	r0, r3
 2114 012c FEFFFFEB 		bl	uart0_putchar
 2115              	.L13:
  28:../src/uart.c ****     while (*s != '\0'){
 2116              		.loc 1 28 0 discriminator 1
 2117 0130 10301BE5 		ldr	r3, [fp, #-16]
 2118 0134 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2119 0138 000053E3 		cmp	r3, #0
 2120 013c F4FFFF1A 		bne	.L14
  30:../src/uart.c ****     }
  31:../src/uart.c **** }
 2121              		.loc 1 31 0
 2122 0140 0CD04BE2 		sub	sp, fp, #12
 2123 0144 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2124 0148 1EFF2FE1 		bx	lr
 2125              		.cfi_endproc
 2126              	.LFE3:
 2128              		.align	2
 2129              		.global	uart0_putint
 2131              	uart0_putint:
 2132              	.LFB4:
  32:../src/uart.c **** 
  33:../src/uart.c **** void uart0_putint( int32 i )
  34:../src/uart.c **** {
 2133              		.loc 1 34 0
 2134              		.cfi_startproc
 2135              		@ Function supports interworking.
 2136              		@ args = 0, pretend = 0, frame = 24
 2137              		@ frame_needed = 1, uses_anonymous_args = 0
 2138 014c 0DC0A0E1 		mov	ip, sp
 2139              	.LCFI8:
 2140              		.cfi_def_cfa_register 12
 2141 0150 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2142 0154 04B04CE2 		sub	fp, ip, #4
 2143              		.cfi_offset 14, -8
 2144              		.cfi_offset 13, -12
 2145              		.cfi_offset 11, -16
 2146              	.LCFI9:
 2147              		.cfi_def_cfa 11, 4
 2148 0158 18D04DE2 		sub	sp, sp, #24
 2149 015c 20000BE5 		str	r0, [fp, #-32]
  35:../src/uart.c **** 	char buf[8 + 1];
  36:../src/uart.c **** 	char *p = buf + 8;
 2150              		.loc 1 36 0
 2151 0160 1C304BE2 		sub	r3, fp, #28
 2152 0164 083083E2 		add	r3, r3, #8
 2153 0168 10300BE5 		str	r3, [fp, #-16]
  37:../src/uart.c **** 	int8 c;
  38:../src/uart.c **** 	boolean negativo = FALSE;
 2154              		.loc 1 38 0
 2155 016c 0030A0E3 		mov	r3, #0
 2156 0170 11304BE5 		strb	r3, [fp, #-17]
  39:../src/uart.c **** 
  40:../src/uart.c **** 	*p = '\0';
 2157              		.loc 1 40 0
 2158 0174 10301BE5 		ldr	r3, [fp, #-16]
 2159 0178 0020A0E3 		mov	r2, #0
 2160 017c 0020C3E5 		strb	r2, [r3, #0]
  41:../src/uart.c **** 	if(i < 0) {
 2161              		.loc 1 41 0
 2162 0180 20301BE5 		ldr	r3, [fp, #-32]
 2163 0184 000053E3 		cmp	r3, #0
 2164 0188 040000AA 		bge	.L16
  42:../src/uart.c **** 		i *= -1;
 2165              		.loc 1 42 0
 2166 018c 20301BE5 		ldr	r3, [fp, #-32]
 2167 0190 003063E2 		rsb	r3, r3, #0
 2168 0194 20300BE5 		str	r3, [fp, #-32]
  43:../src/uart.c **** 		negativo = TRUE;
 2169              		.loc 1 43 0
 2170 0198 0130A0E3 		mov	r3, #1
 2171 019c 11304BE5 		strb	r3, [fp, #-17]
 2172              	.L16:
  44:../src/uart.c **** 	}
  45:../src/uart.c **** 
  46:../src/uart.c **** 	do {
  47:../src/uart.c **** 		c = i % 10;
 2173              		.loc 1 47 0 discriminator 1
 2174 01a0 20101BE5 		ldr	r1, [fp, #-32]
 2175 01a4 A8309FE5 		ldr	r3, .L18
 2176 01a8 9123C3E0 		smull	r2, r3, r1, r3
 2177 01ac 4321A0E1 		mov	r2, r3, asr #2
 2178 01b0 C13FA0E1 		mov	r3, r1, asr #31
 2179 01b4 022063E0 		rsb	r2, r3, r2
 2180 01b8 0230A0E1 		mov	r3, r2
 2181 01bc 0331A0E1 		mov	r3, r3, asl #2
 2182 01c0 023083E0 		add	r3, r3, r2
 2183 01c4 8330A0E1 		mov	r3, r3, asl #1
 2184 01c8 012063E0 		rsb	r2, r3, r1
 2185 01cc 0230A0E1 		mov	r3, r2
 2186 01d0 12304BE5 		strb	r3, [fp, #-18]
  48:../src/uart.c **** 		*--p = '0' + c;
 2187              		.loc 1 48 0 discriminator 1
 2188 01d4 10301BE5 		ldr	r3, [fp, #-16]
 2189 01d8 013043E2 		sub	r3, r3, #1
 2190 01dc 10300BE5 		str	r3, [fp, #-16]
 2191 01e0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2192 01e4 303083E2 		add	r3, r3, #48
 2193 01e8 FF2003E2 		and	r2, r3, #255
 2194 01ec 10301BE5 		ldr	r3, [fp, #-16]
 2195 01f0 0020C3E5 		strb	r2, [r3, #0]
  49:../src/uart.c **** 		i /= 10;
 2196              		.loc 1 49 0 discriminator 1
 2197 01f4 20301BE5 		ldr	r3, [fp, #-32]
 2198 01f8 54209FE5 		ldr	r2, .L18
 2199 01fc 9312C2E0 		smull	r1, r2, r3, r2
 2200 0200 4221A0E1 		mov	r2, r2, asr #2
 2201 0204 C33FA0E1 		mov	r3, r3, asr #31
 2202 0208 023063E0 		rsb	r3, r3, r2
 2203 020c 20300BE5 		str	r3, [fp, #-32]
  50:../src/uart.c **** 	} while (i);
 2204              		.loc 1 50 0 discriminator 1
 2205 0210 20301BE5 		ldr	r3, [fp, #-32]
 2206 0214 000053E3 		cmp	r3, #0
 2207 0218 E0FFFF1A 		bne	.L16
  51:../src/uart.c **** 
  52:../src/uart.c **** 	if(negativo)
 2208              		.loc 1 52 0
 2209 021c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2210 0220 000053E3 		cmp	r3, #0
 2211 0224 0500000A 		beq	.L17
  53:../src/uart.c **** 		*--p = '-';
 2212              		.loc 1 53 0
 2213 0228 10301BE5 		ldr	r3, [fp, #-16]
 2214 022c 013043E2 		sub	r3, r3, #1
 2215 0230 10300BE5 		str	r3, [fp, #-16]
 2216 0234 10301BE5 		ldr	r3, [fp, #-16]
 2217 0238 2D20A0E3 		mov	r2, #45
 2218 023c 0020C3E5 		strb	r2, [r3, #0]
 2219              	.L17:
  54:../src/uart.c **** 
  55:../src/uart.c **** 	uart0_puts( p );
 2220              		.loc 1 55 0
 2221 0240 10001BE5 		ldr	r0, [fp, #-16]
 2222 0244 FEFFFFEB 		bl	uart0_puts
  56:../src/uart.c **** }
 2223              		.loc 1 56 0
 2224 0248 0CD04BE2 		sub	sp, fp, #12
 2225 024c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2226 0250 1EFF2FE1 		bx	lr
 2227              	.L19:
 2228              		.align	2
 2229              	.L18:
 2230 0254 67666666 		.word	1717986919
 2231              		.cfi_endproc
 2232              	.LFE4:
 2234              		.align	2
 2235              		.global	uart0_puthex
 2237              	uart0_puthex:
 2238              	.LFB5:
  57:../src/uart.c **** 
  58:../src/uart.c **** void uart0_puthex( uint32 i )
  59:../src/uart.c **** {
 2239              		.loc 1 59 0
 2240              		.cfi_startproc
 2241              		@ Function supports interworking.
 2242              		@ args = 0, pretend = 0, frame = 24
 2243              		@ frame_needed = 1, uses_anonymous_args = 0
 2244 0258 0DC0A0E1 		mov	ip, sp
 2245              	.LCFI10:
 2246              		.cfi_def_cfa_register 12
 2247 025c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2248 0260 04B04CE2 		sub	fp, ip, #4
 2249              		.cfi_offset 14, -8
 2250              		.cfi_offset 13, -12
 2251              		.cfi_offset 11, -16
 2252              	.LCFI11:
 2253              		.cfi_def_cfa 11, 4
 2254 0264 18D04DE2 		sub	sp, sp, #24
 2255 0268 20000BE5 		str	r0, [fp, #-32]
  60:../src/uart.c ****     char buf[8 + 1];
  61:../src/uart.c ****     char *p = buf + 8;
 2256              		.loc 1 61 0
 2257 026c 1C304BE2 		sub	r3, fp, #28
 2258 0270 083083E2 		add	r3, r3, #8
 2259 0274 10300BE5 		str	r3, [fp, #-16]
  62:../src/uart.c ****     uint8 c;
  63:../src/uart.c **** 
  64:../src/uart.c ****     *p = '\0';
 2260              		.loc 1 64 0
 2261 0278 10301BE5 		ldr	r3, [fp, #-16]
 2262 027c 0020A0E3 		mov	r2, #0
 2263 0280 0020C3E5 		strb	r2, [r3, #0]
 2264              	.L23:
  65:../src/uart.c **** 
  66:../src/uart.c ****     do {
  67:../src/uart.c ****         c = i & 0xf;
 2265              		.loc 1 67 0
 2266 0284 20301BE5 		ldr	r3, [fp, #-32]
 2267 0288 FF3003E2 		and	r3, r3, #255
 2268 028c 0F3003E2 		and	r3, r3, #15
 2269 0290 11304BE5 		strb	r3, [fp, #-17]
  68:../src/uart.c ****         if( c < 10 )
 2270              		.loc 1 68 0
 2271 0294 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2272 0298 090053E3 		cmp	r3, #9
 2273 029c 0800008A 		bhi	.L21
  69:../src/uart.c ****             *--p = '0' + c;
 2274              		.loc 1 69 0
 2275 02a0 10301BE5 		ldr	r3, [fp, #-16]
 2276 02a4 013043E2 		sub	r3, r3, #1
 2277 02a8 10300BE5 		str	r3, [fp, #-16]
 2278 02ac 11305BE5 		ldrb	r3, [fp, #-17]
 2279 02b0 303083E2 		add	r3, r3, #48
 2280 02b4 FF2003E2 		and	r2, r3, #255
 2281 02b8 10301BE5 		ldr	r3, [fp, #-16]
 2282 02bc 0020C3E5 		strb	r2, [r3, #0]
 2283 02c0 070000EA 		b	.L22
 2284              	.L21:
  70:../src/uart.c ****         else
  71:../src/uart.c ****             *--p = 'a' + c - 10;
 2285              		.loc 1 71 0
 2286 02c4 10301BE5 		ldr	r3, [fp, #-16]
 2287 02c8 013043E2 		sub	r3, r3, #1
 2288 02cc 10300BE5 		str	r3, [fp, #-16]
 2289 02d0 11305BE5 		ldrb	r3, [fp, #-17]
 2290 02d4 573083E2 		add	r3, r3, #87
 2291 02d8 FF2003E2 		and	r2, r3, #255
 2292 02dc 10301BE5 		ldr	r3, [fp, #-16]
 2293 02e0 0020C3E5 		strb	r2, [r3, #0]
 2294              	.L22:
  72:../src/uart.c ****         i = i >> 4;
 2295              		.loc 1 72 0
 2296 02e4 20301BE5 		ldr	r3, [fp, #-32]
 2297 02e8 2332A0E1 		mov	r3, r3, lsr #4
 2298 02ec 20300BE5 		str	r3, [fp, #-32]
  73:../src/uart.c ****     } while( i );
 2299              		.loc 1 73 0
 2300 02f0 20301BE5 		ldr	r3, [fp, #-32]
 2301 02f4 000053E3 		cmp	r3, #0
 2302 02f8 E1FFFF1A 		bne	.L23
  74:../src/uart.c **** 
  75:../src/uart.c ****     uart0_puts( p );
 2303              		.loc 1 75 0
 2304 02fc 10001BE5 		ldr	r0, [fp, #-16]
 2305 0300 FEFFFFEB 		bl	uart0_puts
  76:../src/uart.c **** }
 2306              		.loc 1 76 0
 2307 0304 0CD04BE2 		sub	sp, fp, #12
 2308 0308 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2309 030c 1EFF2FE1 		bx	lr
 2310              		.cfi_endproc
 2311              	.LFE5:
 2313              		.align	2
 2314              		.global	uart0_gets
 2316              	uart0_gets:
 2317              	.LFB6:
  77:../src/uart.c **** 
  78:../src/uart.c **** void uart0_gets( char *s )
  79:../src/uart.c **** {
 2318              		.loc 1 79 0
 2319              		.cfi_startproc
 2320              		@ Function supports interworking.
 2321              		@ args = 0, pretend = 0, frame = 16
 2322              		@ frame_needed = 1, uses_anonymous_args = 0
 2323 0310 0DC0A0E1 		mov	ip, sp
 2324              	.LCFI12:
 2325              		.cfi_def_cfa_register 12
 2326 0314 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2327 0318 04B04CE2 		sub	fp, ip, #4
 2328              		.cfi_offset 14, -8
 2329              		.cfi_offset 13, -12
 2330              		.cfi_offset 11, -16
 2331              	.LCFI13:
 2332              		.cfi_def_cfa 11, 4
 2333 031c 10D04DE2 		sub	sp, sp, #16
 2334 0320 18000BE5 		str	r0, [fp, #-24]
  80:../src/uart.c **** 	char c;
  81:../src/uart.c **** 	c = uart0_getchar();
 2335              		.loc 1 81 0
 2336 0324 FEFFFFEB 		bl	uart0_getchar
 2337 0328 0030A0E1 		mov	r3, r0
 2338 032c 0D304BE5 		strb	r3, [fp, #-13]
  82:../src/uart.c **** 	while(c != '\n') {
 2339              		.loc 1 82 0
 2340 0330 080000EA 		b	.L25
 2341              	.L26:
  83:../src/uart.c **** 		*s++ = c;
 2342              		.loc 1 83 0
 2343 0334 18301BE5 		ldr	r3, [fp, #-24]
 2344 0338 0D205BE5 		ldrb	r2, [fp, #-13]
 2345 033c 0020C3E5 		strb	r2, [r3, #0]
 2346 0340 18301BE5 		ldr	r3, [fp, #-24]
 2347 0344 013083E2 		add	r3, r3, #1
 2348 0348 18300BE5 		str	r3, [fp, #-24]
  84:../src/uart.c **** 		c = uart0_getchar();
 2349              		.loc 1 84 0
 2350 034c FEFFFFEB 		bl	uart0_getchar
 2351 0350 0030A0E1 		mov	r3, r0
 2352 0354 0D304BE5 		strb	r3, [fp, #-13]
 2353              	.L25:
  82:../src/uart.c **** 	while(c != '\n') {
 2354              		.loc 1 82 0 discriminator 1
 2355 0358 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2356 035c 0A0053E3 		cmp	r3, #10
 2357 0360 F3FFFF1A 		bne	.L26
  85:../src/uart.c **** 	}
  86:../src/uart.c **** 	*s = '\0';
 2358              		.loc 1 86 0
 2359 0364 18301BE5 		ldr	r3, [fp, #-24]
 2360 0368 0020A0E3 		mov	r2, #0
 2361 036c 0020C3E5 		strb	r2, [r3, #0]
  87:../src/uart.c **** }
 2362              		.loc 1 87 0
 2363 0370 0CD04BE2 		sub	sp, fp, #12
 2364 0374 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2365 0378 1EFF2FE1 		bx	lr
 2366              		.cfi_endproc
 2367              	.LFE6:
 2369              		.align	2
 2370              		.global	uart0_getint
 2372              	uart0_getint:
 2373              	.LFB7:
  88:../src/uart.c **** 
  89:../src/uart.c **** int32 uart0_getint( void )
  90:../src/uart.c **** {
 2374              		.loc 1 90 0
 2375              		.cfi_startproc
 2376              		@ Function supports interworking.
 2377              		@ args = 0, pretend = 0, frame = 272
 2378              		@ frame_needed = 1, uses_anonymous_args = 0
 2379 037c 0DC0A0E1 		mov	ip, sp
 2380              	.LCFI14:
 2381              		.cfi_def_cfa_register 12
 2382 0380 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2383 0384 04B04CE2 		sub	fp, ip, #4
 2384              		.cfi_offset 14, -8
 2385              		.cfi_offset 13, -12
 2386              		.cfi_offset 11, -16
 2387              	.LCFI15:
 2388              		.cfi_def_cfa 11, 4
 2389 0388 11DE4DE2 		sub	sp, sp, #272
  91:../src/uart.c **** 	int32 entero = 0;
 2390              		.loc 1 91 0
 2391 038c 0030A0E3 		mov	r3, #0
 2392 0390 10300BE5 		str	r3, [fp, #-16]
  92:../src/uart.c **** 	char cadena[256], *p;
  93:../src/uart.c **** 	uart0_gets( cadena );
 2393              		.loc 1 93 0
 2394 0394 463F4BE2 		sub	r3, fp, #280
 2395 0398 0300A0E1 		mov	r0, r3
 2396 039c FEFFFFEB 		bl	uart0_gets
  94:../src/uart.c **** 	boolean negativo = FALSE ;
 2397              		.loc 1 94 0
 2398 03a0 0030A0E3 		mov	r3, #0
 2399 03a4 15304BE5 		strb	r3, [fp, #-21]
  95:../src/uart.c **** 
  96:../src/uart.c **** 	p = cadena;
 2400              		.loc 1 96 0
 2401 03a8 463F4BE2 		sub	r3, fp, #280
 2402 03ac 14300BE5 		str	r3, [fp, #-20]
  97:../src/uart.c **** 
  98:../src/uart.c **** 	if( *p == '-') {
 2403              		.loc 1 98 0
 2404 03b0 14301BE5 		ldr	r3, [fp, #-20]
 2405 03b4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2406 03b8 2D0053E3 		cmp	r3, #45
 2407 03bc 1300001A 		bne	.L32
  99:../src/uart.c **** 		negativo = TRUE;
 2408              		.loc 1 99 0
 2409 03c0 0130A0E3 		mov	r3, #1
 2410 03c4 15304BE5 		strb	r3, [fp, #-21]
 100:../src/uart.c **** 		p++;
 2411              		.loc 1 100 0
 2412 03c8 14301BE5 		ldr	r3, [fp, #-20]
 2413 03cc 013083E2 		add	r3, r3, #1
 2414 03d0 14300BE5 		str	r3, [fp, #-20]
 101:../src/uart.c **** 	}
 102:../src/uart.c **** 	while( *p != '\0') {
 2415              		.loc 1 102 0
 2416 03d4 0E0000EA 		b	.L29
 2417              	.L30:
 103:../src/uart.c **** 		entero = (*(p++) - '0') + entero*10;
 2418              		.loc 1 103 0
 2419 03d8 14301BE5 		ldr	r3, [fp, #-20]
 2420 03dc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2421 03e0 301043E2 		sub	r1, r3, #48
 2422 03e4 10201BE5 		ldr	r2, [fp, #-16]
 2423 03e8 0230A0E1 		mov	r3, r2
 2424 03ec 0331A0E1 		mov	r3, r3, asl #2
 2425 03f0 023083E0 		add	r3, r3, r2
 2426 03f4 8330A0E1 		mov	r3, r3, asl #1
 2427 03f8 033081E0 		add	r3, r1, r3
 2428 03fc 10300BE5 		str	r3, [fp, #-16]
 2429 0400 14301BE5 		ldr	r3, [fp, #-20]
 2430 0404 013083E2 		add	r3, r3, #1
 2431 0408 14300BE5 		str	r3, [fp, #-20]
 2432 040c 000000EA 		b	.L29
 2433              	.L32:
 102:../src/uart.c **** 	while( *p != '\0') {
 2434              		.loc 1 102 0
 2435 0410 0000A0E1 		mov	r0, r0	@ nop
 2436              	.L29:
 102:../src/uart.c **** 	while( *p != '\0') {
 2437              		.loc 1 102 0 is_stmt 0 discriminator 1
 2438 0414 14301BE5 		ldr	r3, [fp, #-20]
 2439 0418 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2440 041c 000053E3 		cmp	r3, #0
 2441 0420 ECFFFF1A 		bne	.L30
 104:../src/uart.c **** 	}
 105:../src/uart.c **** 
 106:../src/uart.c **** 	if(negativo)
 2442              		.loc 1 106 0 is_stmt 1
 2443 0424 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2444 0428 000053E3 		cmp	r3, #0
 2445 042c 0200000A 		beq	.L31
 107:../src/uart.c **** 		entero *= -1;
 2446              		.loc 1 107 0
 2447 0430 10301BE5 		ldr	r3, [fp, #-16]
 2448 0434 003063E2 		rsb	r3, r3, #0
 2449 0438 10300BE5 		str	r3, [fp, #-16]
 2450              	.L31:
 108:../src/uart.c **** 	return entero;
 2451              		.loc 1 108 0
 2452 043c 10301BE5 		ldr	r3, [fp, #-16]
 109:../src/uart.c **** }
 2453              		.loc 1 109 0
 2454 0440 0300A0E1 		mov	r0, r3
 2455 0444 0CD04BE2 		sub	sp, fp, #12
 2456 0448 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2457 044c 1EFF2FE1 		bx	lr
 2458              		.cfi_endproc
 2459              	.LFE7:
 2461              		.align	2
 2462              		.global	uart0_gethex
 2464              	uart0_gethex:
 2465              	.LFB8:
 110:../src/uart.c **** 
 111:../src/uart.c **** uint32 uart0_gethex( void )
 112:../src/uart.c **** {
 2466              		.loc 1 112 0
 2467              		.cfi_startproc
 2468              		@ Function supports interworking.
 2469              		@ args = 0, pretend = 0, frame = 264
 2470              		@ frame_needed = 1, uses_anonymous_args = 0
 2471 0450 0DC0A0E1 		mov	ip, sp
 2472              	.LCFI16:
 2473              		.cfi_def_cfa_register 12
 2474 0454 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2475 0458 04B04CE2 		sub	fp, ip, #4
 2476              		.cfi_offset 14, -8
 2477              		.cfi_offset 13, -12
 2478              		.cfi_offset 11, -16
 2479              	.LCFI17:
 2480              		.cfi_def_cfa 11, 4
 2481 045c 42DF4DE2 		sub	sp, sp, #264
 113:../src/uart.c **** 	uint32 hex = 0;
 2482              		.loc 1 113 0
 2483 0460 0030A0E3 		mov	r3, #0
 2484 0464 10300BE5 		str	r3, [fp, #-16]
 114:../src/uart.c **** 	char cadena[256], *p;
 115:../src/uart.c **** 	uart0_gets( cadena );
 2485              		.loc 1 115 0
 2486 0468 453F4BE2 		sub	r3, fp, #276
 2487 046c 0300A0E1 		mov	r0, r3
 2488 0470 FEFFFFEB 		bl	uart0_gets
 116:../src/uart.c **** 
 117:../src/uart.c **** 	p = cadena;
 2489              		.loc 1 117 0
 2490 0474 453F4BE2 		sub	r3, fp, #276
 2491 0478 14300BE5 		str	r3, [fp, #-20]
 118:../src/uart.c **** 
 119:../src/uart.c **** 	while( *p != '\0') {
 2492              		.loc 1 119 0
 2493 047c 3A0000EA 		b	.L34
 2494              	.L37:
 120:../src/uart.c **** 			if (*p >= '0' && *p <= '9')
 2495              		.loc 1 120 0
 2496 0480 14301BE5 		ldr	r3, [fp, #-20]
 2497 0484 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2498 0488 2F0053E3 		cmp	r3, #47
 2499 048c 0F00009A 		bls	.L35
 2500              		.loc 1 120 0 is_stmt 0 discriminator 1
 2501 0490 14301BE5 		ldr	r3, [fp, #-20]
 2502 0494 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2503 0498 390053E3 		cmp	r3, #57
 2504 049c 0B00008A 		bhi	.L35
 121:../src/uart.c **** 				hex = (*(p++) - '0') + hex*16;
 2505              		.loc 1 121 0 is_stmt 1
 2506 04a0 14301BE5 		ldr	r3, [fp, #-20]
 2507 04a4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2508 04a8 0320A0E1 		mov	r2, r3
 2509 04ac 10301BE5 		ldr	r3, [fp, #-16]
 2510 04b0 0332A0E1 		mov	r3, r3, asl #4
 2511 04b4 033082E0 		add	r3, r2, r3
 2512 04b8 303043E2 		sub	r3, r3, #48
 2513 04bc 10300BE5 		str	r3, [fp, #-16]
 2514 04c0 14301BE5 		ldr	r3, [fp, #-20]
 2515 04c4 013083E2 		add	r3, r3, #1
 2516 04c8 14300BE5 		str	r3, [fp, #-20]
 2517 04cc 260000EA 		b	.L34
 2518              	.L35:
 122:../src/uart.c **** 			else if (*p >= 'A' && *p <= 'F')
 2519              		.loc 1 122 0
 2520 04d0 14301BE5 		ldr	r3, [fp, #-20]
 2521 04d4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2522 04d8 400053E3 		cmp	r3, #64
 2523 04dc 0F00009A 		bls	.L36
 2524              		.loc 1 122 0 is_stmt 0 discriminator 1
 2525 04e0 14301BE5 		ldr	r3, [fp, #-20]
 2526 04e4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2527 04e8 460053E3 		cmp	r3, #70
 2528 04ec 0B00008A 		bhi	.L36
 123:../src/uart.c **** 				hex = ((*(p++) - 'A') + 10) + hex*16;
 2529              		.loc 1 123 0 is_stmt 1
 2530 04f0 14301BE5 		ldr	r3, [fp, #-20]
 2531 04f4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2532 04f8 0320A0E1 		mov	r2, r3
 2533 04fc 10301BE5 		ldr	r3, [fp, #-16]
 2534 0500 0332A0E1 		mov	r3, r3, asl #4
 2535 0504 033082E0 		add	r3, r2, r3
 2536 0508 373043E2 		sub	r3, r3, #55
 2537 050c 10300BE5 		str	r3, [fp, #-16]
 2538 0510 14301BE5 		ldr	r3, [fp, #-20]
 2539 0514 013083E2 		add	r3, r3, #1
 2540 0518 14300BE5 		str	r3, [fp, #-20]
 2541 051c 120000EA 		b	.L34
 2542              	.L36:
 124:../src/uart.c **** 			else if (*p >= 'a' && *p <= 'f')
 2543              		.loc 1 124 0
 2544 0520 14301BE5 		ldr	r3, [fp, #-20]
 2545 0524 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2546 0528 600053E3 		cmp	r3, #96
 2547 052c 0E00009A 		bls	.L34
 2548              		.loc 1 124 0 is_stmt 0 discriminator 1
 2549 0530 14301BE5 		ldr	r3, [fp, #-20]
 2550 0534 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2551 0538 660053E3 		cmp	r3, #102
 2552 053c 0A00008A 		bhi	.L34
 125:../src/uart.c **** 				hex = ((*(p++) - 'a') + 10) + hex*16;
 2553              		.loc 1 125 0 is_stmt 1
 2554 0540 14301BE5 		ldr	r3, [fp, #-20]
 2555 0544 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2556 0548 0320A0E1 		mov	r2, r3
 2557 054c 10301BE5 		ldr	r3, [fp, #-16]
 2558 0550 0332A0E1 		mov	r3, r3, asl #4
 2559 0554 033082E0 		add	r3, r2, r3
 2560 0558 573043E2 		sub	r3, r3, #87
 2561 055c 10300BE5 		str	r3, [fp, #-16]
 2562 0560 14301BE5 		ldr	r3, [fp, #-20]
 2563 0564 013083E2 		add	r3, r3, #1
 2564 0568 14300BE5 		str	r3, [fp, #-20]
 2565              	.L34:
 119:../src/uart.c **** 	while( *p != '\0') {
 2566              		.loc 1 119 0 discriminator 1
 2567 056c 14301BE5 		ldr	r3, [fp, #-20]
 2568 0570 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2569 0574 000053E3 		cmp	r3, #0
 2570 0578 C0FFFF1A 		bne	.L37
 126:../src/uart.c **** 		}
 127:../src/uart.c **** 	return hex;
 2571              		.loc 1 127 0
 2572 057c 10301BE5 		ldr	r3, [fp, #-16]
 128:../src/uart.c **** }
 2573              		.loc 1 128 0
 2574 0580 0300A0E1 		mov	r0, r3
 2575 0584 0CD04BE2 		sub	sp, fp, #12
 2576 0588 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2577 058c 1EFF2FE1 		bx	lr
 2578              		.cfi_endproc
 2579              	.LFE8:
 2581              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:1934   .text:00000000 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:1937   .text:00000000 uart0_init
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:1981   .text:00000054 $d
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:1988   .text:00000064 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:1991   .text:00000064 uart0_putchar
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2031   .text:000000ac $d
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2036   .text:000000b4 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2039   .text:000000b4 uart0_getchar
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2077   .text:000000f4 $d
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2082   .text:000000fc $a
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2085   .text:000000fc uart0_puts
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2131   .text:0000014c uart0_putint
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2230   .text:00000254 $d
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2234   .text:00000258 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2237   .text:00000258 uart0_puthex
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2316   .text:00000310 uart0_gets
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2372   .text:0000037c uart0_getint
C:\Users\USUARI~2\AppData\Local\Temp\ccgve0UR.s:2464   .text:00000450 uart0_gethex
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
