   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"keypad.c"
  21              	.Ltext0:
  22              		.file 1 "../src/keypad.c"
 1959              		.align	2
 1960              		.global	keypad_init
 1962              	keypad_init:
 1963              	.LFB0:
   1:../src/keypad.c **** #include <s3c44b0x.h>
   2:../src/keypad.c **** #include <s3cev40.h>
   3:../src/keypad.c **** #include <timers.h>
   4:../src/keypad.c **** #include <keypad.h>
   5:../src/keypad.c **** 
   6:../src/keypad.c **** extern void isr_KEYPAD_dummy( void );
   7:../src/keypad.c **** 
   8:../src/keypad.c **** void keypad_init( void )
   9:../src/keypad.c **** {
 1964              		.loc 1 9 0
 1965              		.cfi_startproc
 1966              		@ Function supports interworking.
 1967              		@ args = 0, pretend = 0, frame = 0
 1968              		@ frame_needed = 1, uses_anonymous_args = 0
 1969 0000 0DC0A0E1 		mov	ip, sp
 1970              	.LCFI0:
 1971              		.cfi_def_cfa_register 12
 1972 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1973 0008 04B04CE2 		sub	fp, ip, #4
 1974              		.cfi_offset 14, -8
 1975              		.cfi_offset 13, -12
 1976              		.cfi_offset 11, -16
 1977              	.LCFI1:
 1978              		.cfi_def_cfa 11, 4
  10:../src/keypad.c ****     EXTINT = (EXTINT & ~(0xf<<4)) | (2<<4);
 1979              		.loc 1 10 0
 1980 000c 20309FE5 		ldr	r3, .L2
 1981 0010 1C209FE5 		ldr	r2, .L2
 1982 0014 002092E5 		ldr	r2, [r2, #0]
 1983 0018 F020C2E3 		bic	r2, r2, #240
 1984 001c 202082E3 		orr	r2, r2, #32
 1985 0020 002083E5 		str	r2, [r3, #0]
  11:../src/keypad.c ****     timers_init();
 1986              		.loc 1 11 0
 1987 0024 FEFFFFEB 		bl	timers_init
  12:../src/keypad.c **** };
 1988              		.loc 1 12 0
 1989 0028 0CD04BE2 		sub	sp, fp, #12
 1990 002c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1991 0030 1EFF2FE1 		bx	lr
 1992              	.L3:
 1993              		.align	2
 1994              	.L2:
 1995 0034 5000D201 		.word	30539856
 1996              		.cfi_endproc
 1997              	.LFE0:
 1999              		.align	2
 2000              		.global	keypad_scan
 2002              	keypad_scan:
 2003              	.LFB1:
  13:../src/keypad.c **** 
  14:../src/keypad.c **** uint8 keypad_scan( void )
  15:../src/keypad.c **** {
 2004              		.loc 1 15 0
 2005              		.cfi_startproc
 2006              		@ Function supports interworking.
 2007              		@ args = 0, pretend = 0, frame = 8
 2008              		@ frame_needed = 1, uses_anonymous_args = 0
 2009 0038 0DC0A0E1 		mov	ip, sp
 2010              	.LCFI2:
 2011              		.cfi_def_cfa_register 12
 2012 003c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2013 0040 04B04CE2 		sub	fp, ip, #4
 2014              		.cfi_offset 14, -8
 2015              		.cfi_offset 13, -12
 2016              		.cfi_offset 11, -16
 2017              	.LCFI3:
 2018              		.cfi_def_cfa 11, 4
 2019 0044 08D04DE2 		sub	sp, sp, #8
  16:../src/keypad.c ****     uint8 aux;
  17:../src/keypad.c **** 
  18:../src/keypad.c ****     aux = *( KEYPAD_ADDR + 0x1c );
 2020              		.loc 1 18 0
 2021 0048 FC319FE5 		ldr	r3, .L22
 2022 004c 0030D3E5 		ldrb	r3, [r3, #0]
 2023 0050 0D304BE5 		strb	r3, [fp, #-13]
  19:../src/keypad.c ****     if( (aux & 0x0f) != 0x0f )
 2024              		.loc 1 19 0
 2025 0054 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2026 0058 0F3003E2 		and	r3, r3, #15
 2027 005c 0F0053E3 		cmp	r3, #15
 2028 0060 1700000A 		beq	.L5
  20:../src/keypad.c ****     {
  21:../src/keypad.c ****         if( (aux & 0x8) == 0 )
 2029              		.loc 1 21 0
 2030 0064 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2031 0068 083003E2 		and	r3, r3, #8
 2032 006c 000053E3 		cmp	r3, #0
 2033 0070 0100001A 		bne	.L6
  22:../src/keypad.c ****             return KEYPAD_KEY0;
 2034              		.loc 1 22 0
 2035 0074 0030A0E3 		mov	r3, #0
 2036 0078 6F0000EA 		b	.L7
 2037              	.L6:
  23:../src/keypad.c ****         else if( (aux & 0x4) == 0 )
 2038              		.loc 1 23 0
 2039 007c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2040 0080 043003E2 		and	r3, r3, #4
 2041 0084 000053E3 		cmp	r3, #0
 2042 0088 0100001A 		bne	.L8
  24:../src/keypad.c ****             return KEYPAD_KEY1;
 2043              		.loc 1 24 0
 2044 008c 0130A0E3 		mov	r3, #1
 2045 0090 690000EA 		b	.L7
 2046              	.L8:
  25:../src/keypad.c ****         else if( (aux & 0x2) == 0 )
 2047              		.loc 1 25 0
 2048 0094 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2049 0098 023003E2 		and	r3, r3, #2
 2050 009c 000053E3 		cmp	r3, #0
 2051 00a0 0100001A 		bne	.L9
  26:../src/keypad.c ****             return KEYPAD_KEY2;
 2052              		.loc 1 26 0
 2053 00a4 0230A0E3 		mov	r3, #2
 2054 00a8 630000EA 		b	.L7
 2055              	.L9:
  27:../src/keypad.c ****         else if( (aux & 0x1) == 0 )
 2056              		.loc 1 27 0
 2057 00ac 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2058 00b0 013003E2 		and	r3, r3, #1
 2059 00b4 000053E3 		cmp	r3, #0
 2060 00b8 0100001A 		bne	.L5
  28:../src/keypad.c ****             return KEYPAD_KEY3;
 2061              		.loc 1 28 0
 2062 00bc 0330A0E3 		mov	r3, #3
 2063 00c0 5D0000EA 		b	.L7
 2064              	.L5:
  29:../src/keypad.c ****     }
  30:../src/keypad.c **** 
  31:../src/keypad.c ****     aux = *( KEYPAD_ADDR + 0x1a);
 2065              		.loc 1 31 0
 2066 00c4 84319FE5 		ldr	r3, .L22+4
 2067 00c8 0030D3E5 		ldrb	r3, [r3, #0]
 2068 00cc 0D304BE5 		strb	r3, [fp, #-13]
  32:../src/keypad.c ****     if( (aux & 0x0f) != 0x0f )
 2069              		.loc 1 32 0
 2070 00d0 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2071 00d4 0F3003E2 		and	r3, r3, #15
 2072 00d8 0F0053E3 		cmp	r3, #15
 2073 00dc 1700000A 		beq	.L10
  33:../src/keypad.c ****     {
  34:../src/keypad.c ****         if( (aux & 0x8) == 0 )
 2074              		.loc 1 34 0
 2075 00e0 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2076 00e4 083003E2 		and	r3, r3, #8
 2077 00e8 000053E3 		cmp	r3, #0
 2078 00ec 0100001A 		bne	.L11
  35:../src/keypad.c ****             return KEYPAD_KEY4;
 2079              		.loc 1 35 0
 2080 00f0 0430A0E3 		mov	r3, #4
 2081 00f4 500000EA 		b	.L7
 2082              	.L11:
  36:../src/keypad.c ****         else if( (aux & 0x4) == 0 )
 2083              		.loc 1 36 0
 2084 00f8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2085 00fc 043003E2 		and	r3, r3, #4
 2086 0100 000053E3 		cmp	r3, #0
 2087 0104 0100001A 		bne	.L12
  37:../src/keypad.c ****             return KEYPAD_KEY5;
 2088              		.loc 1 37 0
 2089 0108 0530A0E3 		mov	r3, #5
 2090 010c 4A0000EA 		b	.L7
 2091              	.L12:
  38:../src/keypad.c ****         else if( (aux & 0x2) == 0 )
 2092              		.loc 1 38 0
 2093 0110 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2094 0114 023003E2 		and	r3, r3, #2
 2095 0118 000053E3 		cmp	r3, #0
 2096 011c 0100001A 		bne	.L13
  39:../src/keypad.c ****             return KEYPAD_KEY6;
 2097              		.loc 1 39 0
 2098 0120 0630A0E3 		mov	r3, #6
 2099 0124 440000EA 		b	.L7
 2100              	.L13:
  40:../src/keypad.c ****         else if( (aux & 0x1) == 0 )
 2101              		.loc 1 40 0
 2102 0128 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2103 012c 013003E2 		and	r3, r3, #1
 2104 0130 000053E3 		cmp	r3, #0
 2105 0134 0100001A 		bne	.L10
  41:../src/keypad.c ****             return KEYPAD_KEY7;
 2106              		.loc 1 41 0
 2107 0138 0730A0E3 		mov	r3, #7
 2108 013c 3E0000EA 		b	.L7
 2109              	.L10:
  42:../src/keypad.c ****     }
  43:../src/keypad.c **** 
  44:../src/keypad.c ****     aux = *( KEYPAD_ADDR + 0x16);
 2110              		.loc 1 44 0
 2111 0140 0C319FE5 		ldr	r3, .L22+8
 2112 0144 0030D3E5 		ldrb	r3, [r3, #0]
 2113 0148 0D304BE5 		strb	r3, [fp, #-13]
  45:../src/keypad.c ****     if( (aux & 0x0f) != 0x0f )
 2114              		.loc 1 45 0
 2115 014c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2116 0150 0F3003E2 		and	r3, r3, #15
 2117 0154 0F0053E3 		cmp	r3, #15
 2118 0158 1700000A 		beq	.L14
  46:../src/keypad.c ****     {
  47:../src/keypad.c ****         if( (aux & 0x8) == 0 )
 2119              		.loc 1 47 0
 2120 015c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2121 0160 083003E2 		and	r3, r3, #8
 2122 0164 000053E3 		cmp	r3, #0
 2123 0168 0100001A 		bne	.L15
  48:../src/keypad.c ****             return KEYPAD_KEY8;
 2124              		.loc 1 48 0
 2125 016c 0830A0E3 		mov	r3, #8
 2126 0170 310000EA 		b	.L7
 2127              	.L15:
  49:../src/keypad.c ****         else if( (aux & 0x4) == 0 )
 2128              		.loc 1 49 0
 2129 0174 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2130 0178 043003E2 		and	r3, r3, #4
 2131 017c 000053E3 		cmp	r3, #0
 2132 0180 0100001A 		bne	.L16
  50:../src/keypad.c ****             return KEYPAD_KEY9;
 2133              		.loc 1 50 0
 2134 0184 0930A0E3 		mov	r3, #9
 2135 0188 2B0000EA 		b	.L7
 2136              	.L16:
  51:../src/keypad.c ****         else if( (aux & 0x2) == 0 )
 2137              		.loc 1 51 0
 2138 018c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2139 0190 023003E2 		and	r3, r3, #2
 2140 0194 000053E3 		cmp	r3, #0
 2141 0198 0100001A 		bne	.L17
  52:../src/keypad.c ****             return KEYPAD_KEYA;
 2142              		.loc 1 52 0
 2143 019c 0A30A0E3 		mov	r3, #10
 2144 01a0 250000EA 		b	.L7
 2145              	.L17:
  53:../src/keypad.c ****         else if( (aux & 0x1) == 0 )
 2146              		.loc 1 53 0
 2147 01a4 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2148 01a8 013003E2 		and	r3, r3, #1
 2149 01ac 000053E3 		cmp	r3, #0
 2150 01b0 0100001A 		bne	.L14
  54:../src/keypad.c ****             return KEYPAD_KEYB;
 2151              		.loc 1 54 0
 2152 01b4 0B30A0E3 		mov	r3, #11
 2153 01b8 1F0000EA 		b	.L7
 2154              	.L14:
  55:../src/keypad.c ****     }
  56:../src/keypad.c **** 
  57:../src/keypad.c ****     aux = *( KEYPAD_ADDR + 0xe);
 2155              		.loc 1 57 0
 2156 01bc 94309FE5 		ldr	r3, .L22+12
 2157 01c0 0030D3E5 		ldrb	r3, [r3, #0]
 2158 01c4 0D304BE5 		strb	r3, [fp, #-13]
  58:../src/keypad.c ****         if( (aux & 0x0f) != 0x0f )
 2159              		.loc 1 58 0
 2160 01c8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2161 01cc 0F3003E2 		and	r3, r3, #15
 2162 01d0 0F0053E3 		cmp	r3, #15
 2163 01d4 1700000A 		beq	.L18
  59:../src/keypad.c ****         {
  60:../src/keypad.c ****             if( (aux & 0x8) == 0 )
 2164              		.loc 1 60 0
 2165 01d8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2166 01dc 083003E2 		and	r3, r3, #8
 2167 01e0 000053E3 		cmp	r3, #0
 2168 01e4 0100001A 		bne	.L19
  61:../src/keypad.c ****                 return KEYPAD_KEYC;
 2169              		.loc 1 61 0
 2170 01e8 0C30A0E3 		mov	r3, #12
 2171 01ec 120000EA 		b	.L7
 2172              	.L19:
  62:../src/keypad.c ****             else if( (aux & 0x4) == 0 )
 2173              		.loc 1 62 0
 2174 01f0 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2175 01f4 043003E2 		and	r3, r3, #4
 2176 01f8 000053E3 		cmp	r3, #0
 2177 01fc 0100001A 		bne	.L20
  63:../src/keypad.c ****                 return KEYPAD_KEYD;
 2178              		.loc 1 63 0
 2179 0200 0D30A0E3 		mov	r3, #13
 2180 0204 0C0000EA 		b	.L7
 2181              	.L20:
  64:../src/keypad.c ****             else if( (aux & 0x2) == 0 )
 2182              		.loc 1 64 0
 2183 0208 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2184 020c 023003E2 		and	r3, r3, #2
 2185 0210 000053E3 		cmp	r3, #0
 2186 0214 0100001A 		bne	.L21
  65:../src/keypad.c ****                 return KEYPAD_KEYE;
 2187              		.loc 1 65 0
 2188 0218 0E30A0E3 		mov	r3, #14
 2189 021c 060000EA 		b	.L7
 2190              	.L21:
  66:../src/keypad.c ****             else if( (aux & 0x1) == 0 )
 2191              		.loc 1 66 0
 2192 0220 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2193 0224 013003E2 		and	r3, r3, #1
 2194 0228 000053E3 		cmp	r3, #0
 2195 022c 0100001A 		bne	.L18
  67:../src/keypad.c ****                 return KEYPAD_KEYF;
 2196              		.loc 1 67 0
 2197 0230 0F30A0E3 		mov	r3, #15
 2198 0234 000000EA 		b	.L7
 2199              	.L18:
  68:../src/keypad.c ****         }
  69:../src/keypad.c **** 
  70:../src/keypad.c ****     return KEYPAD_FAILURE;
 2200              		.loc 1 70 0
 2201 0238 FF30A0E3 		mov	r3, #255
 2202              	.L7:
  71:../src/keypad.c **** }
 2203              		.loc 1 71 0
 2204 023c 0300A0E1 		mov	r0, r3
 2205 0240 0CD04BE2 		sub	sp, fp, #12
 2206 0244 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2207 0248 1EFF2FE1 		bx	lr
 2208              	.L23:
 2209              		.align	2
 2210              	.L22:
 2211 024c 1C000006 		.word	100663324
 2212 0250 1A000006 		.word	100663322
 2213 0254 16000006 		.word	100663318
 2214 0258 0E000006 		.word	100663310
 2215              		.cfi_endproc
 2216              	.LFE1:
 2218              		.align	2
 2219              		.global	keypad_status
 2221              	keypad_status:
 2222              	.LFB2:
  72:../src/keypad.c **** 
  73:../src/keypad.c **** uint8 keypad_status( uint8 scancode )
  74:../src/keypad.c **** {
 2223              		.loc 1 74 0
 2224              		.cfi_startproc
 2225              		@ Function supports interworking.
 2226              		@ args = 0, pretend = 0, frame = 8
 2227              		@ frame_needed = 1, uses_anonymous_args = 0
 2228 025c 0DC0A0E1 		mov	ip, sp
 2229              	.LCFI4:
 2230              		.cfi_def_cfa_register 12
 2231 0260 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2232 0264 04B04CE2 		sub	fp, ip, #4
 2233              		.cfi_offset 14, -8
 2234              		.cfi_offset 13, -12
 2235              		.cfi_offset 11, -16
 2236              	.LCFI5:
 2237              		.cfi_def_cfa 11, 4
 2238 0268 08D04DE2 		sub	sp, sp, #8
 2239 026c 0030A0E1 		mov	r3, r0
 2240 0270 0D304BE5 		strb	r3, [fp, #-13]
  75:../src/keypad.c ****     if (keypad_scan() == scancode) 
 2241              		.loc 1 75 0
 2242 0274 FEFFFFEB 		bl	keypad_scan
 2243 0278 0030A0E1 		mov	r3, r0
 2244 027c 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 2245 0280 030052E1 		cmp	r2, r3
 2246 0284 0100001A 		bne	.L25
  76:../src/keypad.c ****         return KEY_DOWN;
 2247              		.loc 1 76 0
 2248 0288 0130A0E3 		mov	r3, #1
 2249 028c 000000EA 		b	.L26
 2250              	.L25:
  77:../src/keypad.c ****     else
  78:../src/keypad.c ****         return KEY_UP;
 2251              		.loc 1 78 0
 2252 0290 0030A0E3 		mov	r3, #0
 2253              	.L26:
  79:../src/keypad.c ****     
  80:../src/keypad.c **** }
 2254              		.loc 1 80 0
 2255 0294 0300A0E1 		mov	r0, r3
 2256 0298 0CD04BE2 		sub	sp, fp, #12
 2257 029c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2258 02a0 1EFF2FE1 		bx	lr
 2259              		.cfi_endproc
 2260              	.LFE2:
 2262              		.align	2
 2263              		.global	keypad_wait_keydown
 2265              	keypad_wait_keydown:
 2266              	.LFB3:
  81:../src/keypad.c **** 
  82:../src/keypad.c **** void keypad_wait_keydown( uint8 scancode )
  83:../src/keypad.c **** {
 2267              		.loc 1 83 0
 2268              		.cfi_startproc
 2269              		@ Function supports interworking.
 2270              		@ args = 0, pretend = 0, frame = 8
 2271              		@ frame_needed = 1, uses_anonymous_args = 0
 2272 02a4 0DC0A0E1 		mov	ip, sp
 2273              	.LCFI6:
 2274              		.cfi_def_cfa_register 12
 2275 02a8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2276 02ac 04B04CE2 		sub	fp, ip, #4
 2277              		.cfi_offset 14, -8
 2278              		.cfi_offset 13, -12
 2279              		.cfi_offset 11, -16
 2280              	.LCFI7:
 2281              		.cfi_def_cfa 11, 4
 2282 02b0 08D04DE2 		sub	sp, sp, #8
 2283 02b4 0030A0E1 		mov	r3, r0
 2284 02b8 0D304BE5 		strb	r3, [fp, #-13]
  84:../src/keypad.c ****      while( 1 ) 
  85:../src/keypad.c ****      {
  86:../src/keypad.c ****         while( PDATG & (1 << 1) );
 2285              		.loc 1 86 0
 2286 02bc 0000A0E1 		mov	r0, r0	@ nop
 2287              	.L28:
 2288              		.loc 1 86 0 is_stmt 0 discriminator 1
 2289 02c0 5C309FE5 		ldr	r3, .L33
 2290 02c4 003093E5 		ldr	r3, [r3, #0]
 2291 02c8 023003E2 		and	r3, r3, #2
 2292 02cc 000053E3 		cmp	r3, #0
 2293 02d0 FAFFFF1A 		bne	.L28
  87:../src/keypad.c ****         sw_delay_ms( KEYPAD_KEYDOWN_DELAY );
 2294              		.loc 1 87 0 is_stmt 1
 2295 02d4 1E00A0E3 		mov	r0, #30
 2296 02d8 FEFFFFEB 		bl	sw_delay_ms
  88:../src/keypad.c ****         if ( scancode == keypad_scan() )
 2297              		.loc 1 88 0
 2298 02dc FEFFFFEB 		bl	keypad_scan
 2299 02e0 0030A0E1 		mov	r3, r0
 2300 02e4 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 2301 02e8 030052E1 		cmp	r2, r3
 2302 02ec 0900000A 		beq	.L32
  89:../src/keypad.c ****             return;
  90:../src/keypad.c ****         while( (PDATG & (1 << 1)) == 0 ); 
 2303              		.loc 1 90 0
 2304 02f0 0000A0E1 		mov	r0, r0	@ nop
 2305              	.L30:
 2306              		.loc 1 90 0 is_stmt 0 discriminator 1
 2307 02f4 28309FE5 		ldr	r3, .L33
 2308 02f8 003093E5 		ldr	r3, [r3, #0]
 2309 02fc 023003E2 		and	r3, r3, #2
 2310 0300 000053E3 		cmp	r3, #0
 2311 0304 FAFFFF0A 		beq	.L30
  91:../src/keypad.c ****         sw_delay_ms( KEYPAD_KEYUP_DELAY );
 2312              		.loc 1 91 0 is_stmt 1
 2313 0308 6400A0E3 		mov	r0, #100
 2314 030c FEFFFFEB 		bl	sw_delay_ms
  92:../src/keypad.c ****     }         
 2315              		.loc 1 92 0
 2316 0310 0000A0E1 		mov	r0, r0	@ nop
  86:../src/keypad.c ****         while( PDATG & (1 << 1) );
 2317              		.loc 1 86 0
 2318 0314 E9FFFFEA 		b	.L28
 2319              	.L32:
  93:../src/keypad.c **** }
 2320              		.loc 1 93 0
 2321 0318 0CD04BE2 		sub	sp, fp, #12
 2322 031c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2323 0320 1EFF2FE1 		bx	lr
 2324              	.L34:
 2325              		.align	2
 2326              	.L33:
 2327 0324 4400D201 		.word	30539844
 2328              		.cfi_endproc
 2329              	.LFE3:
 2331              		.align	2
 2332              		.global	keypad_wait_keyup
 2334              	keypad_wait_keyup:
 2335              	.LFB4:
  94:../src/keypad.c **** 
  95:../src/keypad.c **** void keypad_wait_keyup( uint8 scancode )
  96:../src/keypad.c **** {
 2336              		.loc 1 96 0
 2337              		.cfi_startproc
 2338              		@ Function supports interworking.
 2339              		@ args = 0, pretend = 0, frame = 8
 2340              		@ frame_needed = 1, uses_anonymous_args = 0
 2341 0328 0DC0A0E1 		mov	ip, sp
 2342              	.LCFI8:
 2343              		.cfi_def_cfa_register 12
 2344 032c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2345 0330 04B04CE2 		sub	fp, ip, #4
 2346              		.cfi_offset 14, -8
 2347              		.cfi_offset 13, -12
 2348              		.cfi_offset 11, -16
 2349              	.LCFI9:
 2350              		.cfi_def_cfa 11, 4
 2351 0334 08D04DE2 		sub	sp, sp, #8
 2352 0338 0030A0E1 		mov	r3, r0
 2353 033c 0D304BE5 		strb	r3, [fp, #-13]
  97:../src/keypad.c **** 	while( 1 )
  98:../src/keypad.c **** 	{
  99:../src/keypad.c **** 		while( PDATG & (1 << 1) );
 2354              		.loc 1 99 0
 2355 0340 0000A0E1 		mov	r0, r0	@ nop
 2356              	.L36:
 2357              		.loc 1 99 0 is_stmt 0 discriminator 1
 2358 0344 5C309FE5 		ldr	r3, .L40
 2359 0348 003093E5 		ldr	r3, [r3, #0]
 2360 034c 023003E2 		and	r3, r3, #2
 2361 0350 000053E3 		cmp	r3, #0
 2362 0354 FAFFFF1A 		bne	.L36
 100:../src/keypad.c **** 		sw_delay_ms( KEYPAD_KEYDOWN_DELAY );
 2363              		.loc 1 100 0 is_stmt 1
 2364 0358 1E00A0E3 		mov	r0, #30
 2365 035c FEFFFFEB 		bl	sw_delay_ms
 101:../src/keypad.c **** 		if ( scancode == keypad_scan() )
 2366              		.loc 1 101 0
 2367 0360 FEFFFFEB 		bl	keypad_scan
 2368 0364 0030A0E1 		mov	r3, r0
 2369 0368 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 2370 036c 030052E1 		cmp	r2, r3
 2371 0370 0A00001A 		bne	.L37
 102:../src/keypad.c **** 		{
 103:../src/keypad.c **** 			while( (PDATG & (1 << 1)) == 0 );
 2372              		.loc 1 103 0
 2373 0374 0000A0E1 		mov	r0, r0	@ nop
 2374              	.L38:
 2375              		.loc 1 103 0 is_stmt 0 discriminator 1
 2376 0378 28309FE5 		ldr	r3, .L40
 2377 037c 003093E5 		ldr	r3, [r3, #0]
 2378 0380 023003E2 		and	r3, r3, #2
 2379 0384 000053E3 		cmp	r3, #0
 2380 0388 FAFFFF0A 		beq	.L38
 104:../src/keypad.c **** 			sw_delay_ms( KEYPAD_KEYUP_DELAY );
 2381              		.loc 1 104 0 is_stmt 1
 2382 038c 6400A0E3 		mov	r0, #100
 2383 0390 FEFFFFEB 		bl	sw_delay_ms
 105:../src/keypad.c **** 			return;
 106:../src/keypad.c **** 		}
 107:../src/keypad.c **** 	}
 108:../src/keypad.c **** 
 109:../src/keypad.c **** }
 2384              		.loc 1 109 0
 2385 0394 0CD04BE2 		sub	sp, fp, #12
 2386 0398 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2387 039c 1EFF2FE1 		bx	lr
 2388              	.L37:
 107:../src/keypad.c **** 	}
 2389              		.loc 1 107 0
 2390 03a0 0000A0E1 		mov	r0, r0	@ nop
  99:../src/keypad.c **** 		while( PDATG & (1 << 1) );
 2391              		.loc 1 99 0
 2392 03a4 E6FFFFEA 		b	.L36
 2393              	.L41:
 2394              		.align	2
 2395              	.L40:
 2396 03a8 4400D201 		.word	30539844
 2397              		.cfi_endproc
 2398              	.LFE4:
 2400              		.align	2
 2401              		.global	keypad_wait_any_keydown
 2403              	keypad_wait_any_keydown:
 2404              	.LFB5:
 110:../src/keypad.c **** 
 111:../src/keypad.c **** void keypad_wait_any_keydown( void )
 112:../src/keypad.c **** {
 2405              		.loc 1 112 0
 2406              		.cfi_startproc
 2407              		@ Function supports interworking.
 2408              		@ args = 0, pretend = 0, frame = 0
 2409              		@ frame_needed = 1, uses_anonymous_args = 0
 2410 03ac 0DC0A0E1 		mov	ip, sp
 2411              	.LCFI10:
 2412              		.cfi_def_cfa_register 12
 2413 03b0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2414 03b4 04B04CE2 		sub	fp, ip, #4
 2415              		.cfi_offset 14, -8
 2416              		.cfi_offset 13, -12
 2417              		.cfi_offset 11, -16
 2418              	.LCFI11:
 2419              		.cfi_def_cfa 11, 4
 113:../src/keypad.c ****     while( PDATG & (1 << 1) );
 2420              		.loc 1 113 0
 2421 03b8 0000A0E1 		mov	r0, r0	@ nop
 2422              	.L43:
 2423              		.loc 1 113 0 is_stmt 0 discriminator 1
 2424 03bc 20309FE5 		ldr	r3, .L44
 2425 03c0 003093E5 		ldr	r3, [r3, #0]
 2426 03c4 023003E2 		and	r3, r3, #2
 2427 03c8 000053E3 		cmp	r3, #0
 2428 03cc FAFFFF1A 		bne	.L43
 114:../src/keypad.c ****     sw_delay_ms( KEYPAD_KEYDOWN_DELAY );  
 2429              		.loc 1 114 0 is_stmt 1
 2430 03d0 1E00A0E3 		mov	r0, #30
 2431 03d4 FEFFFFEB 		bl	sw_delay_ms
 115:../src/keypad.c **** }
 2432              		.loc 1 115 0
 2433 03d8 0CD04BE2 		sub	sp, fp, #12
 2434 03dc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2435 03e0 1EFF2FE1 		bx	lr
 2436              	.L45:
 2437              		.align	2
 2438              	.L44:
 2439 03e4 4400D201 		.word	30539844
 2440              		.cfi_endproc
 2441              	.LFE5:
 2443              		.align	2
 2444              		.global	keypad_wait_any_keyup
 2446              	keypad_wait_any_keyup:
 2447              	.LFB6:
 116:../src/keypad.c **** 
 117:../src/keypad.c **** void keypad_wait_any_keyup( void )
 118:../src/keypad.c **** {
 2448              		.loc 1 118 0
 2449              		.cfi_startproc
 2450              		@ Function supports interworking.
 2451              		@ args = 0, pretend = 0, frame = 0
 2452              		@ frame_needed = 1, uses_anonymous_args = 0
 2453 03e8 0DC0A0E1 		mov	ip, sp
 2454              	.LCFI12:
 2455              		.cfi_def_cfa_register 12
 2456 03ec 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2457 03f0 04B04CE2 		sub	fp, ip, #4
 2458              		.cfi_offset 14, -8
 2459              		.cfi_offset 13, -12
 2460              		.cfi_offset 11, -16
 2461              	.LCFI13:
 2462              		.cfi_def_cfa 11, 4
 119:../src/keypad.c ****     while( PDATG & (1 << 1) );
 2463              		.loc 1 119 0
 2464 03f4 0000A0E1 		mov	r0, r0	@ nop
 2465              	.L47:
 2466              		.loc 1 119 0 is_stmt 0 discriminator 1
 2467 03f8 38309FE5 		ldr	r3, .L49
 2468 03fc 003093E5 		ldr	r3, [r3, #0]
 2469 0400 023003E2 		and	r3, r3, #2
 2470 0404 000053E3 		cmp	r3, #0
 2471 0408 FAFFFF1A 		bne	.L47
 120:../src/keypad.c ****     sw_delay_ms( KEYPAD_KEYUP_DELAY );
 2472              		.loc 1 120 0 is_stmt 1
 2473 040c 6400A0E3 		mov	r0, #100
 2474 0410 FEFFFFEB 		bl	sw_delay_ms
 121:../src/keypad.c ****     while( (PDATG & (1 << 1)) == 0 );
 2475              		.loc 1 121 0
 2476 0414 0000A0E1 		mov	r0, r0	@ nop
 2477              	.L48:
 2478              		.loc 1 121 0 is_stmt 0 discriminator 1
 2479 0418 18309FE5 		ldr	r3, .L49
 2480 041c 003093E5 		ldr	r3, [r3, #0]
 2481 0420 023003E2 		and	r3, r3, #2
 2482 0424 000053E3 		cmp	r3, #0
 2483 0428 FAFFFF0A 		beq	.L48
 122:../src/keypad.c **** }
 2484              		.loc 1 122 0 is_stmt 1
 2485 042c 0CD04BE2 		sub	sp, fp, #12
 2486 0430 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2487 0434 1EFF2FE1 		bx	lr
 2488              	.L50:
 2489              		.align	2
 2490              	.L49:
 2491 0438 4400D201 		.word	30539844
 2492              		.cfi_endproc
 2493              	.LFE6:
 2495              		.align	2
 2496              		.global	keypad_getchar
 2498              	keypad_getchar:
 2499              	.LFB7:
 123:../src/keypad.c **** 
 124:../src/keypad.c **** uint8 keypad_getchar( void )
 125:../src/keypad.c **** {
 2500              		.loc 1 125 0
 2501              		.cfi_startproc
 2502              		@ Function supports interworking.
 2503              		@ args = 0, pretend = 0, frame = 8
 2504              		@ frame_needed = 1, uses_anonymous_args = 0
 2505 043c 0DC0A0E1 		mov	ip, sp
 2506              	.LCFI14:
 2507              		.cfi_def_cfa_register 12
 2508 0440 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2509 0444 04B04CE2 		sub	fp, ip, #4
 2510              		.cfi_offset 14, -8
 2511              		.cfi_offset 13, -12
 2512              		.cfi_offset 11, -16
 2513              	.LCFI15:
 2514              		.cfi_def_cfa 11, 4
 2515 0448 08D04DE2 		sub	sp, sp, #8
 126:../src/keypad.c ****     uint8 scancode;
 127:../src/keypad.c **** 
 128:../src/keypad.c ****     while( PDATG & (1 << 1) );   
 2516              		.loc 1 128 0
 2517 044c 0000A0E1 		mov	r0, r0	@ nop
 2518              	.L52:
 2519              		.loc 1 128 0 is_stmt 0 discriminator 1
 2520 0450 54309FE5 		ldr	r3, .L54
 2521 0454 003093E5 		ldr	r3, [r3, #0]
 2522 0458 023003E2 		and	r3, r3, #2
 2523 045c 000053E3 		cmp	r3, #0
 2524 0460 FAFFFF1A 		bne	.L52
 129:../src/keypad.c ****     sw_delay_ms( KEYPAD_KEYDOWN_DELAY );
 2525              		.loc 1 129 0 is_stmt 1
 2526 0464 1E00A0E3 		mov	r0, #30
 2527 0468 FEFFFFEB 		bl	sw_delay_ms
 130:../src/keypad.c ****     scancode = keypad_scan();
 2528              		.loc 1 130 0
 2529 046c FEFFFFEB 		bl	keypad_scan
 2530 0470 0030A0E1 		mov	r3, r0
 2531 0474 0D304BE5 		strb	r3, [fp, #-13]
 131:../src/keypad.c **** 
 132:../src/keypad.c ****     while( (PDATG & (1 << 1)) == 0 );
 2532              		.loc 1 132 0
 2533 0478 0000A0E1 		mov	r0, r0	@ nop
 2534              	.L53:
 2535              		.loc 1 132 0 is_stmt 0 discriminator 1
 2536 047c 28309FE5 		ldr	r3, .L54
 2537 0480 003093E5 		ldr	r3, [r3, #0]
 2538 0484 023003E2 		and	r3, r3, #2
 2539 0488 000053E3 		cmp	r3, #0
 2540 048c FAFFFF0A 		beq	.L53
 133:../src/keypad.c ****     sw_delay_ms( KEYPAD_KEYUP_DELAY );
 2541              		.loc 1 133 0 is_stmt 1
 2542 0490 6400A0E3 		mov	r0, #100
 2543 0494 FEFFFFEB 		bl	sw_delay_ms
 134:../src/keypad.c **** 
 135:../src/keypad.c ****     return scancode;
 2544              		.loc 1 135 0
 2545 0498 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 136:../src/keypad.c **** }
 2546              		.loc 1 136 0
 2547 049c 0300A0E1 		mov	r0, r3
 2548 04a0 0CD04BE2 		sub	sp, fp, #12
 2549 04a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2550 04a8 1EFF2FE1 		bx	lr
 2551              	.L55:
 2552              		.align	2
 2553              	.L54:
 2554 04ac 4400D201 		.word	30539844
 2555              		.cfi_endproc
 2556              	.LFE7:
 2558              		.align	2
 2559              		.global	keypad_getchartime
 2561              	keypad_getchartime:
 2562              	.LFB8:
 137:../src/keypad.c **** 
 138:../src/keypad.c **** uint8 keypad_getchartime( uint16 *ms )
 139:../src/keypad.c **** {
 2563              		.loc 1 139 0
 2564              		.cfi_startproc
 2565              		@ Function supports interworking.
 2566              		@ args = 0, pretend = 0, frame = 16
 2567              		@ frame_needed = 1, uses_anonymous_args = 0
 2568 04b0 0DC0A0E1 		mov	ip, sp
 2569              	.LCFI16:
 2570              		.cfi_def_cfa_register 12
 2571 04b4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2572 04b8 04B04CE2 		sub	fp, ip, #4
 2573              		.cfi_offset 14, -8
 2574              		.cfi_offset 13, -12
 2575              		.cfi_offset 11, -16
 2576              	.LCFI17:
 2577              		.cfi_def_cfa 11, 4
 2578 04bc 10D04DE2 		sub	sp, sp, #16
 2579 04c0 18000BE5 		str	r0, [fp, #-24]
 140:../src/keypad.c ****     uint8 scancode;
 141:../src/keypad.c **** 
 142:../src/keypad.c ****     while( PDATG & (1 << 1) );
 2580              		.loc 1 142 0
 2581 04c4 0000A0E1 		mov	r0, r0	@ nop
 2582              	.L57:
 2583              		.loc 1 142 0 is_stmt 0 discriminator 1
 2584 04c8 80309FE5 		ldr	r3, .L59
 2585 04cc 003093E5 		ldr	r3, [r3, #0]
 2586 04d0 023003E2 		and	r3, r3, #2
 2587 04d4 000053E3 		cmp	r3, #0
 2588 04d8 FAFFFF1A 		bne	.L57
 143:../src/keypad.c ****     timer3_start();
 2589              		.loc 1 143 0 is_stmt 1
 2590 04dc FEFFFFEB 		bl	timer3_start
 144:../src/keypad.c ****     sw_delay_ms( KEYPAD_KEYDOWN_DELAY );
 2591              		.loc 1 144 0
 2592 04e0 1E00A0E3 		mov	r0, #30
 2593 04e4 FEFFFFEB 		bl	sw_delay_ms
 145:../src/keypad.c ****     scancode = keypad_scan();
 2594              		.loc 1 145 0
 2595 04e8 FEFFFFEB 		bl	keypad_scan
 2596 04ec 0030A0E1 		mov	r3, r0
 2597 04f0 0D304BE5 		strb	r3, [fp, #-13]
 146:../src/keypad.c **** 
 147:../src/keypad.c ****     while( (PDATG & (1 << 1)) == 0 );
 2598              		.loc 1 147 0
 2599 04f4 0000A0E1 		mov	r0, r0	@ nop
 2600              	.L58:
 2601              		.loc 1 147 0 is_stmt 0 discriminator 1
 2602 04f8 50309FE5 		ldr	r3, .L59
 2603 04fc 003093E5 		ldr	r3, [r3, #0]
 2604 0500 023003E2 		and	r3, r3, #2
 2605 0504 000053E3 		cmp	r3, #0
 2606 0508 FAFFFF0A 		beq	.L58
 148:../src/keypad.c ****     *ms = timer3_stop() / 10;
 2607              		.loc 1 148 0 is_stmt 1
 2608 050c FEFFFFEB 		bl	timer3_stop
 2609 0510 0030A0E1 		mov	r3, r0
 2610 0514 0320A0E1 		mov	r2, r3
 2611 0518 34309FE5 		ldr	r3, .L59+4
 2612 051c 921383E0 		umull	r1, r3, r2, r3
 2613 0520 A331A0E1 		mov	r3, r3, lsr #3
 2614 0524 0338A0E1 		mov	r3, r3, asl #16
 2615 0528 2328A0E1 		mov	r2, r3, lsr #16
 2616 052c 18301BE5 		ldr	r3, [fp, #-24]
 2617 0530 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 149:../src/keypad.c ****     sw_delay_ms( KEYPAD_KEYUP_DELAY );
 2618              		.loc 1 149 0
 2619 0534 6400A0E3 		mov	r0, #100
 2620 0538 FEFFFFEB 		bl	sw_delay_ms
 150:../src/keypad.c **** 
 151:../src/keypad.c ****     return scancode;   
 2621              		.loc 1 151 0
 2622 053c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 152:../src/keypad.c **** }
 2623              		.loc 1 152 0
 2624 0540 0300A0E1 		mov	r0, r3
 2625 0544 0CD04BE2 		sub	sp, fp, #12
 2626 0548 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2627 054c 1EFF2FE1 		bx	lr
 2628              	.L60:
 2629              		.align	2
 2630              	.L59:
 2631 0550 4400D201 		.word	30539844
 2632 0554 CDCCCCCC 		.word	-858993459
 2633              		.cfi_endproc
 2634              	.LFE8:
 2636              		.align	2
 2637              		.global	keypad_timeout_getchar
 2639              	keypad_timeout_getchar:
 2640              	.LFB9:
 153:../src/keypad.c **** 
 154:../src/keypad.c **** uint8 keypad_timeout_getchar( uint16 ms )
 155:../src/keypad.c **** {
 2641              		.loc 1 155 0
 2642              		.cfi_startproc
 2643              		@ Function supports interworking.
 2644              		@ args = 0, pretend = 0, frame = 16
 2645              		@ frame_needed = 1, uses_anonymous_args = 0
 2646 0558 0DC0A0E1 		mov	ip, sp
 2647              	.LCFI18:
 2648              		.cfi_def_cfa_register 12
 2649 055c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2650 0560 04B04CE2 		sub	fp, ip, #4
 2651              		.cfi_offset 14, -8
 2652              		.cfi_offset 13, -12
 2653              		.cfi_offset 11, -16
 2654              	.LCFI19:
 2655              		.cfi_def_cfa 11, 4
 2656 0564 10D04DE2 		sub	sp, sp, #16
 2657 0568 0030A0E1 		mov	r3, r0
 2658 056c B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 156:../src/keypad.c ****     uint8 scancode;
 157:../src/keypad.c **** 
 158:../src/keypad.c ****     timer3_start_timeout(ms);
 2659              		.loc 1 158 0
 2660 0570 B6315BE1 		ldrh	r3, [fp, #-22]
 2661 0574 0300A0E1 		mov	r0, r3
 2662 0578 FEFFFFEB 		bl	timer3_start_timeout
 159:../src/keypad.c ****     while( PDATG & (1 << 1));
 2663              		.loc 1 159 0
 2664 057c 0000A0E1 		mov	r0, r0	@ nop
 2665              	.L62:
 2666              		.loc 1 159 0 is_stmt 0 discriminator 1
 2667 0580 6C309FE5 		ldr	r3, .L66
 2668 0584 003093E5 		ldr	r3, [r3, #0]
 2669 0588 023003E2 		and	r3, r3, #2
 2670 058c 000053E3 		cmp	r3, #0
 2671 0590 FAFFFF1A 		bne	.L62
 160:../src/keypad.c ****     if( !timer3_timeout())
 2672              		.loc 1 160 0 is_stmt 1
 2673 0594 FEFFFFEB 		bl	timer3_timeout
 2674 0598 0030A0E1 		mov	r3, r0
 2675 059c 000053E3 		cmp	r3, #0
 2676 05a0 0100001A 		bne	.L63
 161:../src/keypad.c ****         return KEYPAD_TIMEOUT;
 2677              		.loc 1 161 0
 2678 05a4 FE30A0E3 		mov	r3, #254
 2679 05a8 0D0000EA 		b	.L64
 2680              	.L63:
 162:../src/keypad.c ****     else
 163:../src/keypad.c ****     {
 164:../src/keypad.c ****         sw_delay_ms( KEYPAD_KEYDOWN_DELAY );
 2681              		.loc 1 164 0
 2682 05ac 1E00A0E3 		mov	r0, #30
 2683 05b0 FEFFFFEB 		bl	sw_delay_ms
 165:../src/keypad.c ****         scancode = keypad_scan();
 2684              		.loc 1 165 0
 2685 05b4 FEFFFFEB 		bl	keypad_scan
 2686 05b8 0030A0E1 		mov	r3, r0
 2687 05bc 0D304BE5 		strb	r3, [fp, #-13]
 166:../src/keypad.c **** 
 167:../src/keypad.c ****         while( (PDATG & (1 << 1)) == 0 );
 2688              		.loc 1 167 0
 2689 05c0 0000A0E1 		mov	r0, r0	@ nop
 2690              	.L65:
 2691              		.loc 1 167 0 is_stmt 0 discriminator 1
 2692 05c4 28309FE5 		ldr	r3, .L66
 2693 05c8 003093E5 		ldr	r3, [r3, #0]
 2694 05cc 023003E2 		and	r3, r3, #2
 2695 05d0 000053E3 		cmp	r3, #0
 2696 05d4 FAFFFF0A 		beq	.L65
 168:../src/keypad.c ****         sw_delay_ms( KEYPAD_KEYUP_DELAY );
 2697              		.loc 1 168 0 is_stmt 1
 2698 05d8 6400A0E3 		mov	r0, #100
 2699 05dc FEFFFFEB 		bl	sw_delay_ms
 169:../src/keypad.c **** 
 170:../src/keypad.c ****         return scancode;
 2700              		.loc 1 170 0
 2701 05e0 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2702              	.L64:
 171:../src/keypad.c ****     }
 172:../src/keypad.c ****         
 173:../src/keypad.c **** }
 2703              		.loc 1 173 0
 2704 05e4 0300A0E1 		mov	r0, r3
 2705 05e8 0CD04BE2 		sub	sp, fp, #12
 2706 05ec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2707 05f0 1EFF2FE1 		bx	lr
 2708              	.L67:
 2709              		.align	2
 2710              	.L66:
 2711 05f4 4400D201 		.word	30539844
 2712              		.cfi_endproc
 2713              	.LFE9:
 2715              		.align	2
 2716              		.global	keypad_open
 2718              	keypad_open:
 2719              	.LFB10:
 174:../src/keypad.c **** 
 175:../src/keypad.c **** void keypad_open( void (*isr)(void) )
 176:../src/keypad.c **** {
 2720              		.loc 1 176 0
 2721              		.cfi_startproc
 2722              		@ Function supports interworking.
 2723              		@ args = 0, pretend = 0, frame = 8
 2724              		@ frame_needed = 1, uses_anonymous_args = 0
 2725 05f8 0DC0A0E1 		mov	ip, sp
 2726              	.LCFI20:
 2727              		.cfi_def_cfa_register 12
 2728 05fc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2729 0600 04B04CE2 		sub	fp, ip, #4
 2730              		.cfi_offset 14, -8
 2731              		.cfi_offset 13, -12
 2732              		.cfi_offset 11, -16
 2733              	.LCFI21:
 2734              		.cfi_def_cfa 11, 4
 2735 0604 08D04DE2 		sub	sp, sp, #8
 2736 0608 10000BE5 		str	r0, [fp, #-16]
 177:../src/keypad.c ****     pISR_KEYPAD = (uint32) isr;
 2737              		.loc 1 177 0
 2738 060c 30309FE5 		ldr	r3, .L69
 2739 0610 10201BE5 		ldr	r2, [fp, #-16]
 2740 0614 002083E5 		str	r2, [r3, #0]
 178:../src/keypad.c ****     I_ISPC = BIT_KEYPAD;
 2741              		.loc 1 178 0
 2742 0618 28309FE5 		ldr	r3, .L69+4
 2743 061c 0124A0E3 		mov	r2, #16777216
 2744 0620 002083E5 		str	r2, [r3, #0]
 179:../src/keypad.c ****     INTMSK &= ~(BIT_GLOBAL | BIT_KEYPAD);  
 2745              		.loc 1 179 0
 2746 0624 20309FE5 		ldr	r3, .L69+8
 2747 0628 1C209FE5 		ldr	r2, .L69+8
 2748 062c 002092E5 		ldr	r2, [r2, #0]
 2749 0630 0524C2E3 		bic	r2, r2, #83886080
 2750 0634 002083E5 		str	r2, [r3, #0]
 180:../src/keypad.c **** }
 2751              		.loc 1 180 0
 2752 0638 0CD04BE2 		sub	sp, fp, #12
 2753 063c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2754 0640 1EFF2FE1 		bx	lr
 2755              	.L70:
 2756              		.align	2
 2757              	.L69:
 2758 0644 80FF7F0C 		.word	209715072
 2759 0648 2400E001 		.word	31457316
 2760 064c 0C00E001 		.word	31457292
 2761              		.cfi_endproc
 2762              	.LFE10:
 2764              		.align	2
 2765              		.global	keypad_close
 2767              	keypad_close:
 2768              	.LFB11:
 181:../src/keypad.c **** 
 182:../src/keypad.c **** void keypad_close( void )
 183:../src/keypad.c **** {
 2769              		.loc 1 183 0
 2770              		.cfi_startproc
 2771              		@ Function supports interworking.
 2772              		@ args = 0, pretend = 0, frame = 0
 2773              		@ frame_needed = 1, uses_anonymous_args = 0
 2774 0650 0DC0A0E1 		mov	ip, sp
 2775              	.LCFI22:
 2776              		.cfi_def_cfa_register 12
 2777 0654 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2778 0658 04B04CE2 		sub	fp, ip, #4
 2779              		.cfi_offset 14, -8
 2780              		.cfi_offset 13, -12
 2781              		.cfi_offset 11, -16
 2782              	.LCFI23:
 2783              		.cfi_def_cfa 11, 4
 184:../src/keypad.c ****     INTMSK = BIT_KEYPAD;
 2784              		.loc 1 184 0
 2785 065c 1C309FE5 		ldr	r3, .L72
 2786 0660 0124A0E3 		mov	r2, #16777216
 2787 0664 002083E5 		str	r2, [r3, #0]
 185:../src/keypad.c ****     pISR_KEYPAD = (uint32) isr_KEYPAD_dummy;   
 2788              		.loc 1 185 0
 2789 0668 14309FE5 		ldr	r3, .L72+4
 2790 066c 14209FE5 		ldr	r2, .L72+8
 2791 0670 002083E5 		str	r2, [r3, #0]
 186:../src/keypad.c **** }
 2792              		.loc 1 186 0
 2793 0674 0CD04BE2 		sub	sp, fp, #12
 2794 0678 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2795 067c 1EFF2FE1 		bx	lr
 2796              	.L73:
 2797              		.align	2
 2798              	.L72:
 2799 0680 0C00E001 		.word	31457292
 2800 0684 80FF7F0C 		.word	209715072
 2801 0688 00000000 		.word	isr_KEYPAD_dummy
 2802              		.cfi_endproc
 2803              	.LFE11:
 2805              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 keypad.c
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:1959   .text:00000000 $a
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:1962   .text:00000000 keypad_init
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:1995   .text:00000034 $d
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:1999   .text:00000038 $a
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2002   .text:00000038 keypad_scan
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2211   .text:0000024c $d
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2218   .text:0000025c $a
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2221   .text:0000025c keypad_status
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2265   .text:000002a4 keypad_wait_keydown
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2327   .text:00000324 $d
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2331   .text:00000328 $a
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2334   .text:00000328 keypad_wait_keyup
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2396   .text:000003a8 $d
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2400   .text:000003ac $a
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2403   .text:000003ac keypad_wait_any_keydown
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2439   .text:000003e4 $d
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2443   .text:000003e8 $a
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2446   .text:000003e8 keypad_wait_any_keyup
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2491   .text:00000438 $d
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2495   .text:0000043c $a
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2498   .text:0000043c keypad_getchar
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2554   .text:000004ac $d
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2558   .text:000004b0 $a
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2561   .text:000004b0 keypad_getchartime
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2631   .text:00000550 $d
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2636   .text:00000558 $a
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2639   .text:00000558 keypad_timeout_getchar
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2711   .text:000005f4 $d
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2715   .text:000005f8 $a
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2718   .text:000005f8 keypad_open
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2758   .text:00000644 $d
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2764   .text:00000650 $a
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2767   .text:00000650 keypad_close
C:\Users\USUARI~2\AppData\Local\Temp\cco3PyKX.s:2799   .text:00000680 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timers_init
sw_delay_ms
timer3_start
timer3_stop
timer3_start_timeout
timer3_timeout
isr_KEYPAD_dummy
